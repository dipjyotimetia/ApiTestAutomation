name: API Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Run API tests
        run: npm test
        env:
          CI: true
        continue-on-error: true # Continue even if tests fail to upload reports
      
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always() # Upload reports even if tests fail
        with:
          name: test-reports-node-${{ matrix.node-version }}
          path: |
            reports/
            !reports/assets/
          retention-days: 30
      
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always() # Run even if tests fail
        with:
          name: API Test Results (Node ${{ matrix.node-version }})
          path: reports/*.json
          reporter: mocha-json
          fail-on-error: true
      
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Find the latest test report JSON file
            const reportsDir = 'reports';
            if (!fs.existsSync(reportsDir)) {
              console.log('No reports directory found');
              return;
            }
            
            const files = fs.readdirSync(reportsDir)
              .filter(file => file.endsWith('.json') && file.includes('test-report'))
              .sort()
              .reverse();
            
            if (files.length === 0) {
              console.log('No test report files found');
              return;
            }
            
            const reportFile = path.join(reportsDir, files[0]);
            const report = JSON.parse(fs.readFileSync(reportFile, 'utf8'));
            
            const stats = report.stats;
            const passed = stats.passes;
            const failed = stats.failures;
            const pending = stats.pending;
            const total = stats.tests;
            const duration = stats.duration;
            
            const emoji = failed === 0 ? '✅' : '❌';
            
            const body = `## ${emoji} API Test Results (Node ${{ matrix.node-version }})
            
            | Metric | Value |
            |--------|-------|
            | Total Tests | ${total} |
            | Passed | ${passed} ✅ |
            | Failed | ${failed} ❌ |
            | Pending | ${pending} ⏳ |
            | Duration | ${Math.round(duration)}ms |
            
            ${failed > 0 ? `### Failed Tests\n${report.failures.map(f => `- **${f.title}**: ${f.err.message}`).join('\n')}` : ''}
            
            📊 [View detailed report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Optional: Deploy reports to GitHub Pages
  deploy-reports:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          pattern: test-reports-*
          merge-multiple: true
          path: ./reports
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./reports
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4